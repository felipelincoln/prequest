searchNodes=[{"doc":"Prequest keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Prequest.html","title":"Prequest","type":"module"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use PrequestWeb, :controller use PrequestWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"PrequestWeb.html","title":"PrequestWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"PrequestWeb.html#__using__/1","title":"PrequestWeb.__using__/1","type":"macro"},{"doc":"","ref":"PrequestWeb.html#channel/0","title":"PrequestWeb.channel/0","type":"function"},{"doc":"","ref":"PrequestWeb.html#controller/0","title":"PrequestWeb.controller/0","type":"function"},{"doc":"","ref":"PrequestWeb.html#live_component/0","title":"PrequestWeb.live_component/0","type":"function"},{"doc":"","ref":"PrequestWeb.html#live_view/0","title":"PrequestWeb.live_view/0","type":"function"},{"doc":"","ref":"PrequestWeb.html#router/0","title":"PrequestWeb.router/0","type":"function"},{"doc":"","ref":"PrequestWeb.html#view/0","title":"PrequestWeb.view/0","type":"function"},{"doc":"","ref":"PrequestWeb.Endpoint.html","title":"PrequestWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"PrequestWeb.Endpoint.html#broadcast/3","title":"PrequestWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"PrequestWeb.Endpoint.html#broadcast!/3","title":"PrequestWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"PrequestWeb.Endpoint.html#broadcast_from/4","title":"PrequestWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"PrequestWeb.Endpoint.html#broadcast_from!/4","title":"PrequestWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"PrequestWeb.Endpoint.html#call/2","title":"PrequestWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"PrequestWeb.Endpoint.html#child_spec/1","title":"PrequestWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"PrequestWeb.Endpoint.html#config/2","title":"PrequestWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"PrequestWeb.Endpoint.html#config_change/2","title":"PrequestWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"PrequestWeb.Endpoint.html#host/0","title":"PrequestWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"PrequestWeb.Endpoint.html#init/1","title":"PrequestWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"PrequestWeb.Endpoint.html#local_broadcast/3","title":"PrequestWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"PrequestWeb.Endpoint.html#local_broadcast_from/4","title":"PrequestWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"PrequestWeb.Endpoint.html#path/1","title":"PrequestWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"PrequestWeb.Endpoint.html#script_name/0","title":"PrequestWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"PrequestWeb.Endpoint.html#start_link/1","title":"PrequestWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"PrequestWeb.Endpoint.html#static_integrity/1","title":"PrequestWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"PrequestWeb.Endpoint.html#static_lookup/1","title":"PrequestWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"PrequestWeb.Endpoint.html#static_path/1","title":"PrequestWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"PrequestWeb.Endpoint.html#static_url/0","title":"PrequestWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"PrequestWeb.Endpoint.html#struct_url/0","title":"PrequestWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"PrequestWeb.Endpoint.html#subscribe/2","title":"PrequestWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"PrequestWeb.Endpoint.html#unsubscribe/1","title":"PrequestWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"PrequestWeb.Endpoint.html#url/0","title":"PrequestWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"PrequestWeb.ErrorHelpers.html","title":"PrequestWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"PrequestWeb.ErrorHelpers.html#error_tag/2","title":"PrequestWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"PrequestWeb.ErrorHelpers.html#translate_error/1","title":"PrequestWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"PrequestWeb.ErrorView.html","title":"PrequestWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"PrequestWeb.ErrorView.html#__resource__/0","title":"PrequestWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"PrequestWeb.ErrorView.html#render/2","title":"PrequestWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"PrequestWeb.ErrorView.html#template_not_found/2","title":"PrequestWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import PrequestWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"PrequestWeb.Gettext.html","title":"PrequestWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"PrequestWeb.Gettext.html#dgettext/3","title":"PrequestWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"PrequestWeb.Gettext.html#dgettext_noop/2","title":"PrequestWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"PrequestWeb.Gettext.html#dngettext/5","title":"PrequestWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"PrequestWeb.Gettext.html#dngettext_noop/3","title":"PrequestWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"PrequestWeb.Gettext.html#dpgettext/4","title":"PrequestWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"PrequestWeb.Gettext.html#dpgettext_noop/3","title":"PrequestWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"PrequestWeb.Gettext.html#dpngettext/6","title":"PrequestWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"PrequestWeb.Gettext.html#dpngettext_noop/4","title":"PrequestWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"PrequestWeb.Gettext.html#gettext/2","title":"PrequestWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"PrequestWeb.Gettext.html#gettext_comment/1","title":"PrequestWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"PrequestWeb.Gettext.html#gettext_noop/1","title":"PrequestWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"PrequestWeb.Gettext.html#handle_missing_bindings/2","title":"PrequestWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"PrequestWeb.Gettext.html#handle_missing_plural_translation/6","title":"PrequestWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"PrequestWeb.Gettext.html#handle_missing_translation/4","title":"PrequestWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"PrequestWeb.Gettext.html#lgettext/5","title":"PrequestWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"PrequestWeb.Gettext.html#lngettext/7","title":"PrequestWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"PrequestWeb.Gettext.html#ngettext/4","title":"PrequestWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"PrequestWeb.Gettext.html#ngettext_noop/2","title":"PrequestWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"PrequestWeb.Gettext.html#pgettext/3","title":"PrequestWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"PrequestWeb.Gettext.html#pgettext_noop/2","title":"PrequestWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"PrequestWeb.Gettext.html#pngettext/5","title":"PrequestWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"PrequestWeb.Gettext.html#pngettext_noop/3","title":"PrequestWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"PrequestWeb.LayoutView.html","title":"PrequestWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"PrequestWeb.LayoutView.html#__resource__/0","title":"PrequestWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"PrequestWeb.LayoutView.html#render/2","title":"PrequestWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"PrequestWeb.LayoutView.html#template_not_found/2","title":"PrequestWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"Starting page generated with mix phx.new &lt;project_name&gt; --live","ref":"PrequestWeb.PageLive.html","title":"PrequestWeb.PageLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.render/1.","ref":"PrequestWeb.PageLive.html#render/1","title":"PrequestWeb.PageLive.render/1","type":"function"},{"doc":"","ref":"PrequestWeb.Router.html","title":"PrequestWeb.Router","type":"module"},{"doc":"","ref":"PrequestWeb.Router.html#api/2","title":"PrequestWeb.Router.api/2","type":"function"},{"doc":"","ref":"PrequestWeb.Router.html#browser/2","title":"PrequestWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"PrequestWeb.Router.html#call/2","title":"PrequestWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"PrequestWeb.Router.html#init/1","title":"PrequestWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from PrequestWeb.Router.","ref":"PrequestWeb.Router.Helpers.html","title":"PrequestWeb.Router.Helpers","type":"module"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_path/2","title":"PrequestWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_path/3","title":"PrequestWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_path/4","title":"PrequestWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_path/5","title":"PrequestWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_url/2","title":"PrequestWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_url/3","title":"PrequestWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_url/4","title":"PrequestWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#live_dashboard_url/5","title":"PrequestWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#page_path/2","title":"PrequestWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#page_path/3","title":"PrequestWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#page_url/2","title":"PrequestWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"PrequestWeb.Router.Helpers.html#page_url/3","title":"PrequestWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"PrequestWeb.Router.Helpers.html#path/2","title":"PrequestWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"PrequestWeb.Router.Helpers.html#static_integrity/2","title":"PrequestWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"PrequestWeb.Router.Helpers.html#static_path/2","title":"PrequestWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"PrequestWeb.Router.Helpers.html#static_url/2","title":"PrequestWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"PrequestWeb.Router.Helpers.html#url/1","title":"PrequestWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"PrequestWeb.UserSocket.html","title":"PrequestWeb.UserSocket","type":"module"},{"doc":"A public API for managing content.","ref":"Prequest.CMS.html","title":"Prequest.CMS","type":"module"},{"doc":"Creates an article.Examplesiex&gt; create_article(%{ ...&gt; title: &quot;some title&quot;, ...&gt; source: &quot;some github url&quot;, ...&gt; cover: &quot;some image url&quot;, ...&gt; user_id: 10 ...&gt; }) {:ok, %Article{}} iex&gt; create_article(%{}) {:error, %Ecto.Changeset{}}A topics key can be passed in the map input to associate topics with the article, whether it already exists or not.iex&gt; create_article(%{ ...&gt; title: &quot;some title2&quot;, ...&gt; source: &quot;some github url2&quot;, ...&gt; cover: &quot;some image url2&quot;, ...&gt; user_id: 10, ...&gt; topics: [%{name: &quot;elixir&quot;}, %{name: &quot;phoenix&quot;}] ...&gt; }) {:ok, %Article{}}Once the topics named &quot;elixir&quot; and &quot;phoenix&quot; was created in the previous example, we can associate them again with a new article. We can proceed in two manners:Get its struct from database and insert it into the topics list.Pass the same map we used to create it.Let's use the &quot;phoenix&quot; topic in the former way and &quot;elixir&quot; in the latter.iex&gt; topic = CMS.get_topic(&quot;phoenix&quot;) iex&gt; create_article(%{ ...&gt; title: &quot;some title3&quot;, ...&gt; source: &quot;some github url3&quot;, ...&gt; cover: &quot;some image url3&quot;, ...&gt; user_id: 10, ...&gt; topics: [%{name: &quot;elixir&quot;}, topic] ...&gt; }) {:ok, %Article{}}","ref":"Prequest.CMS.html#create_article/1","title":"Prequest.CMS.create_article/1","type":"function"},{"doc":"Creates a report.Examplesiex&gt; create_report(%{user_id: 15, article_id: 3}) {:ok, %Report{}} iex&gt; create_report(%{}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#create_report/1","title":"Prequest.CMS.create_report/1","type":"function"},{"doc":"Creates a topic.Examplesiex&gt; create_topic(%{name: &quot;new topic&quot;}) {:ok, %Topic{}} iex&gt; create_topic(%{name: &quot;&quot;}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#create_topic/1","title":"Prequest.CMS.create_topic/1","type":"function"},{"doc":"Creates a user.Examplesiex&gt; create_user(%{ username: &quot;felipelincoln&quot;, name: &quot;Felipe de Souza Lincoln&quot;, bio: &quot;this is my bio&quot; }) {:ok, %User{}} iex&gt; create_user(%{}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#create_user/1","title":"Prequest.CMS.create_user/1","type":"function"},{"doc":"Creates a view.Examplesiex&gt; create_view(%{user_id: 23, article_id: 12}) {:ok, %View{}} iex&gt; create_view(%{}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#create_view/1","title":"Prequest.CMS.create_view/1","type":"function"},{"doc":"Deletes an article.Examplesiex&gt; delete_article(article) {:ok, %Article{}} iex&gt; delete_article(article) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#delete_article/1","title":"Prequest.CMS.delete_article/1","type":"function"},{"doc":"Deletes a report.Examplesiex&gt; delete_report(report) {:ok, %Report{}} iex&gt; delete_report(report) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#delete_report/1","title":"Prequest.CMS.delete_report/1","type":"function"},{"doc":"Deletes a topic.Examplesiex&gt; delete_topic(topic) {:ok, %Topic{}} iex&gt; delete_topic(topic) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#delete_topic/1","title":"Prequest.CMS.delete_topic/1","type":"function"},{"doc":"Deletes a user.Examplesiex&gt; delete_user(user) {:ok, %User{}} iex&gt; delete_user(user) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#delete_user/1","title":"Prequest.CMS.delete_user/1","type":"function"},{"doc":"Deletes a view.Examplesiex&gt; delete_view(view) {:ok, %View{}} iex&gt; delete_view(view) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#delete_view/1","title":"Prequest.CMS.delete_view/1","type":"function"},{"doc":"Gets a single article.Raises Ecto.NoResultsError if the Article does not exist.Examplesiex&gt; get_article!(123) %Article{} iex&gt; get_article!(456) ** (Ecto.NoResultsError)","ref":"Prequest.CMS.html#get_article!/1","title":"Prequest.CMS.get_article!/1","type":"function"},{"doc":"Gets a single report.Raises Ecto.NoResultsError if the Report does not exist.Examplesiex&gt; get_report!(123) %Report{} iex&gt; get_report!(456) ** (Ecto.NoResultsError)","ref":"Prequest.CMS.html#get_report!/1","title":"Prequest.CMS.get_report!/1","type":"function"},{"doc":"Gets a single topic by its name.Examplesiex&gt; get_topic(&quot;elixir&quot;) %Topic{} iex&gt; get_topic(&quot;&quot;) nil","ref":"Prequest.CMS.html#get_topic/1","title":"Prequest.CMS.get_topic/1","type":"function"},{"doc":"Gets a single user by its username.Examplesiex&gt; get_user(&quot;felipelincoln&quot;) %User{} iex&gt; get_user(&quot;nonexistinguser&quot;) nil","ref":"Prequest.CMS.html#get_user/1","title":"Prequest.CMS.get_user/1","type":"function"},{"doc":"Gets a single user.Raises Ecto.NoResultsError if the User does not exist.Examplesiex&gt; get_user!(123) %User{} iex&gt; get_user!(456) ** (Ecto.NoResultsError)","ref":"Prequest.CMS.html#get_user!/1","title":"Prequest.CMS.get_user!/1","type":"function"},{"doc":"Gets a single view.Examplesiex&gt; get_view(user.id, article.id) %View{} iex&gt; get_view(0, 0) nil","ref":"Prequest.CMS.html#get_view/2","title":"Prequest.CMS.get_view/2","type":"function"},{"doc":"Preload all fields from a schema's struct inside a pipeline.ExamplesIt can be used for create_* pipelines,iex&gt; create_article(%{...}) {:ok, %Article{ #=&gt; reports: #Ecto.Association.NotLoaded&lt;association :reports is not loaded&gt; #=&gt; user: #Ecto.Association.NotLoaded&lt;association :user is not loaded&gt; #=&gt; views: #Ecto.Association.NotLoaded&lt;association :views is not loaded&gt; ... } } iex&gt; create_article(%{...}) |&gt; preload() {:ok, %Article{ reports: [%Report{}, ...], topics: [%Topic{}, ...], user: %User{}, views: [%View{}, ...], ... } }and also update_* pipelines.iex&gt; update_report(%{...}) {:ok, %Report{ #=&gt; user: #Ecto.Association.NotLoaded&lt;association :user is not loaded&gt; #=&gt; article: #Ecto.Association.NotLoaded&lt;association :article is not loaded&gt; ... } } iex&gt; update_report(%{...}) |&gt; preload() {:ok, %Report{ user: %User{}, article: %Article{}, ... } }If the preceding changeset contain errors it does not do anything.iex&gt; create_topic(%{name: nil}) |&gt; preload() {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#preload/1","title":"Prequest.CMS.preload/1","type":"function"},{"doc":"Preload fields from a schema's struct.Raises ArgumentError if the fields does not exist in the struct.Examplesiex&gt; user %User{} #=&gt; articles: #Ecto.Association.NotLoaded&lt;association :articles is not loaded&gt; iex&gt; preload!(user, :articles) %User{ articles: [%Article{}, ...], ... } iex&gt; article %Article{ #=&gt; reports: #Ecto.Association.NotLoaded&lt;association :reports is not loaded&gt; #=&gt; views: #Ecto.Association.NotLoaded&lt;association :views is not loaded&gt; } iex&gt; preload!(article, [:views, :reports]) %Article{ views: [%View{}, ...], reports: [%Report{}, ...], ... } iex&gt; preload!(article, :field) ** (ArgumentError)","ref":"Prequest.CMS.html#preload!/2","title":"Prequest.CMS.preload!/2","type":"function"},{"doc":"Updates an article.Examplesiex&gt; update_article(article, %{title: &quot;updated title&quot;}) {:ok, %Article{}} iex&gt; update_article(article, %{source: nil}) {:error, %Ecto.Changeset{}}When updating the topics do not forget to append the new one to the existing ones. Otherwise it will be replaced.To see how the topics field works take a look at create_article/1iex&gt; article |&gt; CMS.preload!(:topics) %Article{ topics: [ %Topic{name: &quot;elixir&quot;}, %Topic{name: &quot;ecto&quot;} ], ... } iex&gt; {:ok, article} = update_article(article, %{topics: [%{name: &quot;phoenix&quot;}]}) {:ok, %Article{ topics: [%Topic{name: &quot;phoenix&quot;}], ... } } iex&gt; update_article(article, %{topics: article.topics ++ [%{name: &quot;elixir&quot;}, %{name: &quot;ecto&quot;}]}) {:ok, %Article{ topics: [ %Topic{name: &quot;elixir&quot;}, %Topic{name: &quot;ecto&quot;}, %Topic{name: &quot;phoenix&quot;} ], ... } }","ref":"Prequest.CMS.html#update_article/2","title":"Prequest.CMS.update_article/2","type":"function"},{"doc":"Updates a report.Examplesiex&gt; update_report(report, %{message: &quot;updated message&quot;}) {:ok, %Report{}} iex&gt; update_report(report, %{article_id: nil}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#update_report/2","title":"Prequest.CMS.update_report/2","type":"function"},{"doc":"Updates a topic.Examplesiex&gt; update_topic(topic, %{name: &quot;updated name&quot;}) {:ok, %Topic{}} iex&gt; update_topic(topic, %{name: &quot;&quot;}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#update_topic/2","title":"Prequest.CMS.update_topic/2","type":"function"},{"doc":"Updates a user.Examplesiex&gt; update_user(user, %{bio: &quot;updated bio&quot;}) {:ok, %User{}} iex&gt; update_user(user, %{username: nil}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#update_user/2","title":"Prequest.CMS.update_user/2","type":"function"},{"doc":"Updates a view.Examplesiex&gt; update_view(view, %{liked?: true}) {:ok, %View{}} iex&gt; update_view(view, %{article_id: nil}) {:error, %Ecto.Changeset{}}","ref":"Prequest.CMS.html#update_view/2","title":"Prequest.CMS.update_view/2","type":"function"},{"doc":"","ref":"Prequest.CMS.html#t:article/0","title":"Prequest.CMS.article/0","type":"type"},{"doc":"","ref":"Prequest.CMS.html#t:changeset/0","title":"Prequest.CMS.changeset/0","type":"type"},{"doc":"","ref":"Prequest.CMS.html#t:report/0","title":"Prequest.CMS.report/0","type":"type"},{"doc":"","ref":"Prequest.CMS.html#t:topic/0","title":"Prequest.CMS.topic/0","type":"type"},{"doc":"","ref":"Prequest.CMS.html#t:user/0","title":"Prequest.CMS.user/0","type":"type"},{"doc":"","ref":"Prequest.CMS.html#t:view/0","title":"Prequest.CMS.view/0","type":"type"},{"doc":"The schema that models the article.schema &quot;articles&quot; do field :cover, :string field :source, :string field :title, :string timestamps() belongs_to :user, Accounts.User has_many :reports, Report has_many :views, View many_to_many :topics, Topic, join_through: &quot;articles_topics&quot;, on_replace: :delete endArticle is a content created by a user.","ref":"Prequest.CMS.Article.html","title":"Prequest.CMS.Article","type":"module"},{"doc":"Article's changeset.ValidationRequired: :title, :cover, :source and user_id. Unique: :source.","ref":"Prequest.CMS.Article.html#changeset/2","title":"Prequest.CMS.Article.changeset/2","type":"function"},{"doc":"The schema that models the report.schema &quot;reports&quot; do field :message, :string timestamps() belongs_to :user, Accounts.User belongs_to :article, Article endReport is a type of interaction one can make with an article, whether a registered user or not. This should point out problems in the article's content. Once spotted, it is easier for other (or even the author) to find it in order to fix it.","ref":"Prequest.CMS.Report.html","title":"Prequest.CMS.Report","type":"module"},{"doc":"Report's changesetValidationRequired: article_id.","ref":"Prequest.CMS.Report.html#changeset/2","title":"Prequest.CMS.Report.changeset/2","type":"function"},{"doc":"The schema that models the topic.schema &quot;topics&quot; do field :name, :string timestamps() many_to_many :articles, Article, join_through: &quot;articles_topics&quot; endTopic is a category in which an article can be inserted.","ref":"Prequest.CMS.Topic.html","title":"Prequest.CMS.Topic","type":"module"},{"doc":"Topic's changeset.ValidationRequired: name. Unique: name.","ref":"Prequest.CMS.Topic.html#changeset/2","title":"Prequest.CMS.Topic.changeset/2","type":"function"},{"doc":"The schema that models the user.schema &quot;users&quot; do field :bio, :string field :name, :string field :username, :string timestamps() has_many :articles, CMS.Article has_many :reports, CMS.Report has_many :views, CMS.View endUsers are the one that create content to the platform.","ref":"Prequest.CMS.User.html","title":"Prequest.CMS.User","type":"module"},{"doc":"User's changeset.ValidationRequired: username. Unique: username.","ref":"Prequest.CMS.User.html#changeset/2","title":"Prequest.CMS.User.changeset/2","type":"function"},{"doc":"The schema that models the view.schema &quot;view&quot; do field :liked?, :boolean, default: false timestamps() belongs_to :user, Accounts.User belongs_to :article, Article endView is the interaction between a user and an article. It shows when the article was viewed and liked by the user.","ref":"Prequest.CMS.View.html","title":"Prequest.CMS.View","type":"module"},{"doc":"View's changeset.ValidationRequired: article_id, user_id.","ref":"Prequest.CMS.View.html#changeset/2","title":"Prequest.CMS.View.changeset/2","type":"function"},{"doc":"Contributing to PrequestMake sure to have docker-compose installed.","ref":"contributing.html","title":"Contributing to Prequest","type":"extras"},{"doc":"Enter the development container:git clone https://github.com/felipelincoln/prequest.git cd prequest/ docker-compose run --service-ports web /bin/shCreate the database, run migrations and start the server:mix ecto.setup mix phx.serverAfter exiting the container (with the exit command) you can get back to it:docker start -a -i prequest_web_run_&lt;hash&gt; Alternatively, you can fast start the services:docker-compose up","ref":"contributing.html#running-the-application-locally","title":"Contributing to Prequest - Running the application locally","type":"extras"},{"doc":"Good practice to run before making commits. It will mirror our GitHub action.Run the following inside the container:mix ciThis will run: mix format --check-formatted --dry-run mix credo --strict mix sobelow -v mix coveralls.github","ref":"contributing.html#test-pipeline","title":"Contributing to Prequest - Test pipeline","type":"extras"},{"doc":"Run whenever your changes may cause documentation changes.Run the following inside the container:mix docs","ref":"contributing.html#building-documentation","title":"Contributing to Prequest - Building documentation","type":"extras"}]